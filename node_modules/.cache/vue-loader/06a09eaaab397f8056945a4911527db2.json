{"remainingRequest":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/src/components/MealComponent.vue?vue&type=template&id=3b98290c&scoped=true&","dependencies":[{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/src/components/MealComponent.vue","mtime":1606480315688},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-PWA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}