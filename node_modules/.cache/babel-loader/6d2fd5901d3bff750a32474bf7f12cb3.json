{"remainingRequest":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/node_modules/babel-loader/lib/index.js!/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/node_modules/eslint-loader/index.js??ref--13-0!/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/src/service/AuthenticationService.js","dependencies":[{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/src/service/AuthenticationService.js","mtime":1605800256879},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvTWF0aWVuL0RvY3VtZW50cy9VbmkvQmFjaGVsb3JhcmJlaXQvUHJvdG90eXBlbi9SV0EvZnJvbnRlbmQvTWVuc2EtRnJvbnRFbmQtUldBL3Z1ZS1qcy1jbGllbnQtY3J1ZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9NYXRpZW4vRG9jdW1lbnRzL1VuaS9CYWNoZWxvcmFyYmVpdC9Qcm90b3R5cGVuL1JXQS9mcm9udGVuZC9NZW5zYS1Gcm9udEVuZC1SV0EvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBodHRwIGZyb20gJy4uL2h0dHAtY29tbW9uJzsKCnZhciBBdXRoZW50aWNhdGlvblNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEF1dGhlbnRpY2F0aW9uU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBdXRoZW50aWNhdGlvblNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEF1dGhlbnRpY2F0aW9uU2VydmljZSwgW3sKICAgIGtleTogInJlZ2lzdGVyU3VjY2VzZnVsTG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyU3VjY2VzZnVsTG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKSB7CiAgICAgIHRoaXMuc2V0dXBBeGlvc0ludGVyY2VwdG9ycyh0aGlzLmNyZWF0ZUJhc2ljQXV0aFRva2VuKHVzZXJuYW1lLCBwYXNzd29yZCkpOwogICAgfQogIH0sIHsKICAgIGtleTogInN0YXJ0QXV0aGVudGljYXRpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0QXV0aGVudGljYXRpb24odXNlcm5hbWUsIHBhc3N3b3JkKSB7CiAgICAgIHJldHVybiBodHRwLmdldCgnL2Jhc2ljYXV0aCcsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmNyZWF0ZUJhc2ljQXV0aFRva2VuKHVzZXJuYW1lLCBwYXNzd29yZCkKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZUJhc2ljQXV0aFRva2VuIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVCYXNpY0F1dGhUb2tlbih1c2VybmFtZSwgcGFzc3dvcmQpIHsKICAgICAgdmFyIHRva2VuID0gJ0Jhc2ljICcgKyB3aW5kb3cuYnRvYSh1c2VybmFtZSArICI6IiArIHBhc3N3b3JkKTsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rva2VuJywgdG9rZW4pOwogICAgICByZXR1cm4gdG9rZW47CiAgICB9CiAgfSwgewogICAga2V5OiAibG9nb3V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogICAgICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpOwogICAgfQogIH0sIHsKICAgIGtleTogImlzVXNlckxvZ2dlZEluIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpc1VzZXJMb2dnZWRJbigpIHsKICAgICAgdmFyIHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7CiAgICAgIGlmICh0b2tlbiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXR1cEF4aW9zSW50ZXJjZXB0b3JzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXR1cEF4aW9zSW50ZXJjZXB0b3JzKHRva2VuKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBodHRwLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgICAgaWYgKF90aGlzLmlzVXNlckxvZ2dlZEluKCkpIHsKICAgICAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSB0b2tlbjsKICAgICAgICB9CgogICAgICAgIHJldHVybiBjb25maWc7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEF1dGhlbnRpY2F0aW9uU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IEF1dGhlbnRpY2F0aW9uU2VydmljZSgpOw=="},{"version":3,"sources":["/Users/Matien/Documents/Uni/Bachelorarbeit/Prototypen/RWA/frontend/Mensa-FrontEnd-RWA/vue-js-client-crud/src/service/AuthenticationService.js"],"names":["http","AuthenticationService","username","password","setupAxiosInterceptors","createBasicAuthToken","get","headers","authorization","token","window","btoa","localStorage","setItem","removeItem","sessionStorage","clear","getItem","interceptors","request","use","config","isUserLoggedIn","Authorization"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;IAGMC,qB;;;;;;;2CACqBC,Q,EAAUC,Q,EAAU;AACvC,WAAKC,sBAAL,CAA4B,KAAKC,oBAAL,CAA0BH,QAA1B,EAAoCC,QAApC,CAA5B;AACH;;;wCAEmBD,Q,EAAUC,Q,EAAU;AACpC,aAAOH,IAAI,CAACM,GAAL,CAAS,YAAT,EAAuB;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAE,KAAKH,oBAAL,CAA0BH,QAA1B,EAAoCC,QAApC;AAAhB;AAAV,OAAvB,CAAP;AAEH;;;yCAEoBD,Q,EAAUC,Q,EAAU;AACrC,UAAIM,KAAK,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYT,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAvB;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACA,aAAOA,KAAP;AACH;;;6BAEQ;AACLG,MAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAC,MAAAA,cAAc,CAACC,KAAf;AACH;;;qCAEgB;AACb,UAAIP,KAAK,GAAGG,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIR,KAAK,KAAK,IAAd,EAAoB,OAAO,KAAP;AACpB,aAAO,IAAP;AACH;;;2CAEsBA,K,EAAO;AAAA;;AAC1BT,MAAAA,IAAI,CAACkB,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACI,UAACC,MAAD,EAAY;AACR,YAAI,KAAI,CAACC,cAAL,EAAJ,EAA2B;AACvBD,UAAAA,MAAM,CAACd,OAAP,CAAegB,aAAf,GAA+Bd,KAA/B;AACH;;AACD,eAAOY,MAAP;AACH,OANL;AAQH;;;;;;AAGL,eAAe,IAAIpB,qBAAJ,EAAf","sourcesContent":["import http from '../http-common'\n\n\nclass AuthenticationService {\n    registerSuccesfulLogin(username, password) {\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\n    }\n\n    startAuthentication(username, password) {\n        return http.get('/basicauth', {headers: {authorization: this.createBasicAuthToken(username, password)}});\n\n    }\n\n    createBasicAuthToken(username, password) {\n        let token = 'Basic ' + window.btoa(username + \":\" + password);\n        localStorage.setItem('token', token)\n        return token\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        sessionStorage.clear()\n    }\n\n    isUserLoggedIn() {\n        let token = localStorage.getItem('token');\n        if (token === null) return false\n        return true\n    }\n\n    setupAxiosInterceptors(token) {\n        http.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.Authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService();"]}]}